{"version":3,"file":"component---src-pages-index-js-90cf4f10b214f8b7306d.js","mappings":"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","sources":["webpack://complete-intro-to-computer-science/./src/components/TOCCard.js","webpack://complete-intro-to-computer-science/./src/pages/index.js","webpack://complete-intro-to-computer-science/./src/util/helpers.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby-link\";\nimport * as helpers from \"../util/helpers\";\nimport \"./TOCCard.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nconst sortFn = helpers.sorter;\n\nconst LessonCard = ({ content, title }) => {\n  const sections = content\n    .map((lesson) => lesson.node.frontmatter)\n    .sort(sortFn)\n    .reduce((acc, lesson) => {\n      if (!acc.length) {\n        acc.push([lesson]);\n        return acc;\n      }\n\n      const lastSection = acc[acc.length - 1][0].section.split(\",\")[0];\n      if (lastSection === lesson.section.split(\",\")[0]) {\n        acc[acc.length - 1].push(lesson);\n      } else {\n        acc.push([lesson]);\n      }\n\n      return acc;\n    }, []);\n\n  return (\n    <div className=\"main-card\">\n      <h1 className=\"lesson-title\">{title}</h1>\n      <div className=\"lesson-content\">\n        <ol className=\"sections-name\">\n          {sections.map((section) => (\n            <li key={section[0].section}>\n              <div className=\"lesson-details\">\n                <div className=\"lesson-preface\">\n                  <i\n                    className={`fas fa-${\n                      section[0].icon ? section[0].icon : \"dumpster-fire\"\n                    }`}\n                  ></i>\n                </div>\n                <div className=\"lesson-text\">\n                  <h3 className=\"lesson-section-title\">{section[0].section}</h3>\n                  <ol>\n                    {section.map((lesson) => (\n                      <li key={lesson.path}>\n                        <Link to={lesson.path}>{lesson.title}</Link>\n                      </li>\n                    ))}\n                  </ol>\n                </div>\n                <div className=\"details-bg\" />\n              </div>\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default LessonCard;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Card from \"../components/TOCCard\";\n\nimport \"./index.css\";\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n      query HomepageTOC {\n        site {\n          siteMetadata {\n            title\n            subtitle\n            description\n            keywords\n          }\n        }\n        allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___order] }) {\n          edges {\n            node {\n              id\n              frontmatter {\n                order\n                path\n                title\n                section\n                description\n                icon\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(props) => (\n      <div className=\"index\">\n        <div className=\"jumbotron\">\n          <div className=\"courseInfo\">\n            <div className=\"courseInfo-inner\">\n              <h1>{props.site.siteMetadata.title}</h1>\n              <h2>{props.site.siteMetadata.subtitle}</h2>\n              <div className=\"author\">\n                <div className=\"image\">\n                  <img className=\"image\" src=\"author.jpg\" />\n                </div>\n                <div className=\"info\">\n                  <div className=\"name\">Brian Holt</div>\n                  <div className=\"company\">Microsoft</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"courseIcon\">\n            <img src=\"algorithms.png\" />\n          </div>\n        </div>\n\n        <Card\n          title=\"Table of Contents\"\n          content={props.allMarkdownRemark.edges}\n        />\n      </div>\n    )}\n  />\n);\n\nexport default IndexPage;\n","function splitSections(str) {\n  const validSectionTest = /^\\d+[A-Z]+$/;\n  const numbersRegex = /^\\d+/;\n  const lettersRegex = /[A-Z]+$/;\n  if (!validSectionTest.test(str)) {\n    throw new Error(\n      `${str} does not match the section format. It must be <numbers><capital letters>, like 16A or 5F (case sensitive)`\n    );\n  }\n\n  return [numbersRegex.exec(str)[0], lettersRegex.exec(str)[0]];\n}\n\nconst getCharScore = str =>\n  str\n    .split(\"\")\n    .map((char, index) => char.charCodeAt(0) * 10 ** index)\n    .reduce((acc, score) => acc + score);\n\nfunction sorter(a, b) {\n  let aOrder, bOrder;\n\n  if (a.attributes && a.attributes.order) {\n    aOrder = a.attributes.order;\n    bOrder = b.attributes.order;\n  } else {\n    aOrder = a.order;\n    bOrder = b.order;\n  }\n\n  const [aSec, aSub] = splitSections(aOrder);\n  const [bSec, bSub] = splitSections(bOrder);\n\n  // sections first\n  if (aSec !== bSec) {\n    return aSec - bSec;\n  }\n\n  // subsections next\n  return getCharScore(aSub) - getCharScore(bSub);\n}\n\nmodule.exports.splitSections = splitSections;\nmodule.exports.sorter = sorter;\n"],"names":["sortFn","helpers","_ref","content","title","sections","map","lesson","node","frontmatter","sort","reduce","acc","length","push","section","split","React","className","key","icon","path","Link","to","IndexPage","StaticQuery","query","render","props","site","siteMetadata","subtitle","src","Card","allMarkdownRemark","edges","splitSections","str","test","Error","exec","getCharScore","char","index","charCodeAt","score","module","exports","a","b","aOrder","bOrder","attributes","order","aSec","aSub","bSec","bSub"],"sourceRoot":""}