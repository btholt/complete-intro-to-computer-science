{"data":{"site":{"siteMetadata":{"title":"Complete Intro to Computer Science","subtitle":"Data Structures and Algorithms","description":"Come learn the basics to computer science with Brian Holt","keywords":["computer science","complete intro","sorts","algorithms","Brian Holt","javascript","node.js"]}},"allMarkdownRemark":{"edges":[{"node":{"id":"ddb08c9b-93f2-599e-b8be-4944a5c57fa1","frontmatter":{"order":"10A","path":"/bloom-filters/","title":"Bloom Filters","section":"Other Data Structures","description":"","icon":"seedling"}}},{"node":{"id":"5bd366bb-9c17-5eae-a2bb-f89b10353a0d","frontmatter":{"order":"11A","path":"/wrap-up/","title":"Wrap Up","section":"Conclusion","description":"","icon":"flag-checkered"}}},{"node":{"id":"744bfccd-218f-52a5-abf7-81c2904b0656","frontmatter":{"order":"1A","path":"/intro/","title":"Introduction","section":"Welcome","description":"Brian introduces to himself, the course, and what you can expect to learn in the next few hours","icon":"info-circle"}}},{"node":{"id":"0b12d7c2-f930-529a-a715-6ca167529cc8","frontmatter":{"order":"1B","path":"/exercises/","title":"The Exercises","section":"Welcome","description":"Brian teaches how to do access the exercises for the workshop.","icon":null}}},{"node":{"id":"95357e88-8bcd-5ca8-8598-60d2fe585a7f","frontmatter":{"order":"2A","path":"/big-o/","title":"Big O","section":"Algorithm Analysis","description":"Brian goes over how to measure how efficient an algorithm and the tools we have to measure it","icon":"flask"}}},{"node":{"id":"5dd5ff13-7545-5f4f-815b-f671c000608a","frontmatter":{"order":"2B","path":"/spatial-complexity/","title":"Spatial Complexity","section":"Algorithm Analysis","description":"Brian talks about Big O as it's applied to how much space something needs","icon":null}}},{"node":{"id":"e95d069c-fb74-5003-b1ea-9459ae07ba0f","frontmatter":{"order":"2C","path":"/trade-offs/","title":"Trade Offs","section":"Algorithm Analysis","description":"Brian goes over why we use Big O and the art of making trade offs","icon":null}}},{"node":{"id":"4583a368-e27d-5a0d-a4f1-8ff368bd145d","frontmatter":{"order":"3A","path":"/bubble-sort/","title":"Bubble Sort","section":"Iterative Sorts","description":"Starting from basics, Brian teaches how to sort items in a list using the classic simple sorting algorithm, the bubble sort.","icon":"redo"}}},{"node":{"id":"80f4c80d-730f-589a-b1d1-1a21005d7d4d","frontmatter":{"order":"3B","path":"/insertion-sort/","title":"Insertion Sort","section":"Iterative Sorts","description":"A more useful tool, insertion sort is a tool that developers will occasionally use. Brian goes over why that is and how to do it","icon":null}}},{"node":{"id":"b0adebd3-1326-55f5-8792-c7fa22d0248b","frontmatter":{"order":"4A","path":"/recursion/","title":"Recursion","section":"Recursive Sorts","description":"Brian defines recursion as something that recurses. In this section Brian teaches what recursion is and some places you might use it.","icon":"sitemap"}}},{"node":{"id":"dc991696-4068-5ae0-bd62-1d34216e87df","frontmatter":{"order":"4B","path":"/merge-sort/","title":"Merge Sort","section":"Recursive Sorts","description":"One of the most versatile and useful sorts, merge sorts has wide applications due to its stabilitiy and reliability for sorting.","icon":null}}},{"node":{"id":"e6e52e25-bb83-5518-885d-b7012f48b44c","frontmatter":{"order":"4C","path":"/quick-sort/","title":"Quick Sort","section":"Recursive Sorts","description":"A sort that has a better best case than merge sort, quick sort is frequently used as well. Brian teaches you all you need to know to add this to your algorithm toolbox.","icon":null}}},{"node":{"id":"918e47da-b1c9-5cf2-aea5-e2a07739f8a8","frontmatter":{"order":"5A","path":"/radix-sort/","title":"Radix Sort","section":"Non-Comparison Sorts","description":"Brian introduces another way of sorting that doesn't involve direct comparisons: radix sorting.","icon":"sort-amount-up-alt"}}},{"node":{"id":"8260bbb1-4b0a-54fe-9fdf-8072ace8e5e1","frontmatter":{"order":"6A","path":"/binary-search/","title":"Binary Search","section":"Binary Search","description":"Sometimes you don't need to sort the whole array, you just need to find one element. Brian introduces one of the most effective ways of finding an element in array: binary search","icon":"search"}}},{"node":{"id":"5270cd80-a7ce-5665-a312-cb933a3206e0","frontmatter":{"order":"7A","path":"/arraylist/","title":"ArrayList","section":"Lists","description":"","icon":"list-alt"}}},{"node":{"id":"b2c2ea3b-9f9b-5e2c-8522-718ab167080c","frontmatter":{"order":"7B","path":"/linkedlist/","title":"LinkedList","section":"Lists","description":"","icon":null}}},{"node":{"id":"84f1034d-f7f4-542f-8825-f6e93f453404","frontmatter":{"order":"8A","path":"/binary-search-tree/","title":"Binary Search Tree","section":"Trees","description":"","icon":"tree"}}},{"node":{"id":"3438e7c5-5c9c-5b0a-9087-10d147c05f33","frontmatter":{"order":"8B","path":"/avl-tree/","title":"AVL Tree","section":"Trees","description":"","icon":null}}},{"node":{"id":"e209a453-c27d-5f1f-9e04-ad348b04ff09","frontmatter":{"order":"8C","path":"/depth-first-tree-traversals/","title":"Depth-First Tree Traversals","section":"Trees","description":"","icon":null}}},{"node":{"id":"5f53e43a-550d-59ce-8174-0521ee1704db","frontmatter":{"order":"8D","path":"/breadth-first-tree-traversals/","title":"Breadth-First Tree Traversals","section":"Trees","description":"","icon":null}}},{"node":{"id":"9792beb0-85c9-53eb-9192-d6f3b8792f08","frontmatter":{"order":"8E","path":"/heap-sort/","title":"Heap Sort","section":"Trees","description":"","icon":null}}},{"node":{"id":"287dbd63-0bc7-5a5c-915b-8dcf7ad0e9f8","frontmatter":{"order":"9A","path":"/graphs/","title":"Graphs","section":"Applying Tree Algorithms","description":"","icon":"map-signs"}}},{"node":{"id":"9fbc32d3-7500-52dd-9beb-b7ffa094a140","frontmatter":{"order":"9B","path":"/pathfinding/","title":"Pathfinding","section":"Applying Tree Algorithms","description":"","icon":null}}},{"node":{"id":"ed4d3e68-3716-5416-b12c-058118bca9e1","frontmatter":{"order":"9C","path":"/tries/","title":"Tries","section":"Applying Tree Algorithms","description":"","icon":null}}}]}}}